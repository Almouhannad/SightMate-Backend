services:
# OCR SERVICE
  ocrservice.api:
    image: ${DOCKER_REGISTRY-}ocrserviceapi
    container_name: ocr_service_api
    build:
      context: .
      dockerfile: OCRService/OCRService.API/Dockerfile
    env_file:
      - OCRService/.env
    environment:
      SEQ_SERVER: "${SEQ_SERVER}"
  # ocrservice.api2:
  #   image: ${DOCKER_REGISTRY-}ocrserviceapi
  #   build:
  #     context: .
  #     dockerfile: OCRService/OCRService.API/Dockerfile
  #   env_file:
  #     - OCRService/.env 

# VQA SERVICE
  vqaservice.api:
    image: ${DOCKER_REGISTRY-}vqaserviceapi
    container_name: vqa_service_api
    build:
      context: .
      dockerfile: VQAService/VQAService.API/Dockerfile
    env_file:
      - VQAService/.env
    environment:
      JWT_SECRET_KEY:    "${JWT_SECRET_KEY}"
      JWT_ISSUER:        "${JWT_ISSUER}"
      JWT_AUDIENCE:      "${JWT_AUDIENCE}"
      SEQ_SERVER:        "${SEQ_SERVER}"
  # vqaservice.api2:
  #   image: ${DOCKER_REGISTRY-}vqaserviceapi
  #   build:
  #     context: .
  #     dockerfile: VQAService/VQAService.API/Dockerfile
  #   env_file:
  #     - VQAService/.env

  vqa_database:
    image: mongo:6.0
    container_name: vqa_service_database
    env_file:
      - VQAService/.env
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${VQA_DATABASE_MONGO_ROOT_USERNAME}"
      MONGO_INITDB_ROOT_PASSWORD: "${VQA_DATABASE_MONGO_ROOT_PASSWORD}"
      MONGO_INITDB_DATABASE:      "${VQA_DATABASE_MONGO_DATABASE}"
    volumes:
      - ./.docker/vqa_data:/data/db
      - ./.docker/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro

  # vqa_database_ui:
  #   image: mongo-express:1.0.0
  #   container_name: vqa_service_database_ui
  #   depends_on:
  #     - vqa_database
  #   ports:
  #     - "9812:8081"
  #   environment:
  #     ME_CONFIG_MONGODB_SERVER:          "${VQA_DATABASE_MONGO_HOST}"
  #     ME_CONFIG_MONGODB_PORT:            "${VQA_DATABASE_MONGO_PORT}"
  #     ME_CONFIG_MONGODB_ADMINUSERNAME:   "${VQA_DATABASE_MONGO_ROOT_USERNAME}"
  #     ME_CONFIG_MONGODB_ADMINPASSWORD:   "${VQA_DATABASE_MONGO_ROOT_PASSWORD}"
  #     ME_CONFIG_MONGODB_AUTH_DATABASE:   "${VQA_DATABASE_AUTH_DATABASE}"
  #     ME_CONFIG_BASICAUTH_USERNAME:      "${VQA_DATABASE_ME_USERNAME}"
  #     ME_CONFIG_BASICAUTH_PASSWORD:      "${VQA_DATABASE_ME_PASSWORD}"

# API-GATEWAY
  gateway.api:
    image: ${DOCKER_REGISTRY-}gatewayapi
    container_name: gateway_api
    build:
      context: .
      dockerfile: Gateway/Gateway.API/Dockerfile
    environment:
      JWT_SECRET_KEY:    "${JWT_SECRET_KEY}"
      JWT_ISSUER:        "${JWT_ISSUER}"
      JWT_AUDIENCE:      "${JWT_AUDIENCE}"
      SEQ_SERVER:        "${SEQ_SERVER}"
    ports:
      - "9990:8080"

# IDENTITY SERVICE
  identityservice.api:
    image: ${DOCKER_REGISTRY-}identityserviceapi
    container_name: identity_service_api
    depends_on:
      - identity_database
    build:
      context: .
      dockerfile: IdentityService/IdentityService.API/Dockerfile
    env_file:
      - IdentityService/.env
    environment:
      JWT_SECRET_KEY:    "${JWT_SECRET_KEY}"
      JWT_ISSUER:        "${JWT_ISSUER}"
      JWT_AUDIENCE:      "${JWT_AUDIENCE}"
      SEQ_SERVER:        "${SEQ_SERVER}"

  identity_database:
    image: postgres:17
    container_name: identity_service_database
    environment:
        POSTGRES_DB:         "${IDENTITY_DATABASE_NAME}"
        POSTGRES_USER:       "${IDENTITY_DATABASE_USER}"
        POSTGRES_PASSWORD:   "${IDENTITY_DATABASE_PASSWORD}"
    volumes:
      - ./.docker/identity_data:/var/lib/postgresql/data
  # identity_database_ui:
  #   image: dpage/pgadmin4:latest
  #   container_name: identity_service_database_ui
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL:    "${IDENTITY_DATABASE_UI_EMAIL}"
  #     PGADMIN_DEFAULT_PASSWORD: "${IDENTITY_DATABASE_UI_PASSWORD}"
  #   ports:
  #     - "5050:80"
  #   depends_on:
  #     - identity_database

# LOGGING SERVER
  seq:
    image: datalust/seq:2024.3
    container_name: logging_server
    environment:
      - ACCEPT_EULA=Y
    ports:
      - "8081:80"
    volumes:
      - ./.docker/seq-data:/data